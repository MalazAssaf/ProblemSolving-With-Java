    import java.util.Scanner;
    import java.util.Arrays;   
import java.util.function.BinaryOperator;
            public class First {
                public static void main(String[] args) {
                    Scanner f = new Scanner(System.in);
                    int size = f.nextInt();
                    int cap = f.nextInt();
                    int [] array = new int [size];
                    for(int i =0; i<array.length; i++){
                        int element = f.nextInt();
                        array[i] = element;
                    }
                    Arrays.sort(array); // I use this one to sort the array because if I use the normal way, it would take a lot of time
                 while(cap>0){
                        int tr = f.nextInt();
                        int result = BinarySearch(0, size-1, array, tr);
                        if(result==-1){
                            System.out.println("not found");
                        }
                        else{
                            System.out.println("found");
                        }
                        cap--;
                    
                    }
                        
            }  
            public static int BinarySearch(int left, int right, int[]array, int search){ // A function to search throughout the array, 
                // when the element is bigger than the middle number, it goes to right and vice versa
                while(right>=left){
                    int mid = left + ((right-left) /2);
                    if(search == array[mid]){
                        return mid;
                    }
                    else if(search>array[mid]){
                        left = mid + 1;
                    }
                    else{
                        right = mid -1;
                    }
                }
                return -1;
            } 
            }
